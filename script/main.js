// Generated by CoffeeScript 1.9.3
(function() {
  var filter, get_hash_key, set_hash_key, sort,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  get_hash_key = function(key) {
    var i, k, len, pair, ref, ref1, v;
    ref = location.hash.substr(1).split(',');
    for (i = 0, len = ref.length; i < len; i++) {
      pair = ref[i];
      if (indexOf.call(pair, '=') < 0) {
        continue;
      }
      ref1 = pair.split('='), k = ref1[0], v = ref1[1];
      if (k === key) {
        return v;
      }
    }
    return '';
  };

  set_hash_key = function(key, value) {
    var i, k, len, new_hash, pair, ref, ref1, v;
    new_hash = '';
    ref = window.location.hash.substr(1).split(',');
    for (i = 0, len = ref.length; i < len; i++) {
      pair = ref[i];
      if (indexOf.call(pair, '=') < 0) {
        continue;
      }
      ref1 = pair.split('='), k = ref1[0], v = ref1[1];
      if (k !== key) {
        new_hash += pair + ",";
      }
    }
    if (value !== '') {
      new_hash += key + "=" + value + ",";
    }
    return window.location.hash = "" + new_hash;
  };

  filter = function() {
    var h;
    h = get_hash_key('filter');
    if (h === '') {
      return $('.weblog-brief').css('display', 'block');
    } else {
      $(".weblog-brief:not(.lang-" + h + ")").css('display', 'none');
      return $(".weblog-brief.lang-" + h).css('display', 'block');
    }
  };

  sort = function() {
    var h, sorted;
    h = get_hash_key('sort');
    if (h === '') {
      return;
    }
    sorted = $('.weblog-brief').remove().toArray();
    sorted.sort(function(a, b) {
      return $(a).attr("data-" + h).localeCompare($(b).attr("data-" + h));
    });
    if (h === 'updated') {
      sorted.reverse();
    }
    return $('.weblog-overview').append(sorted);
  };

  $(document).ready(function() {
    filter();
    sort();
    $('#code-filter').on('change', function() {
      return set_hash_key('filter', $(this).find(':selected').attr('value'));
    });
    $('#code-sort').on('change', function() {
      return set_hash_key('sort', $(this).find(':selected').attr('value'));
    });
    $("#code-filter option[value=\"" + (get_hash_key('filter')) + "\"]").attr('selected', 'selected');
    return $("#code-sort option[value=\"" + (get_hash_key('sort')) + "\"]").attr('selected', 'selected');
  });

  window.addEventListener('hashchange', function() {
    filter();
    return sort();
  });

}).call(this);
