// Generated by CoffeeScript 1.9.3
(function() {
  var filter, get_hash_key, get_scroll, set_hash_key, sort, zoom,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  get_hash_key = function(key) {
    var i, k, len, pair, ref, ref1, v;
    ref = location.hash.substr(1).split(',');
    for (i = 0, len = ref.length; i < len; i++) {
      pair = ref[i];
      if (indexOf.call(pair, '=') < 0) {
        continue;
      }
      ref1 = pair.split('='), k = ref1[0], v = ref1[1];
      if (k === key) {
        return v;
      }
    }
    return '';
  };

  set_hash_key = function(key, value) {
    var i, k, len, new_hash, pair, ref, ref1, v;
    new_hash = '';
    ref = window.location.hash.substr(1).split(',');
    for (i = 0, len = ref.length; i < len; i++) {
      pair = ref[i];
      if (indexOf.call(pair, '=') < 0) {
        continue;
      }
      ref1 = pair.split('='), k = ref1[0], v = ref1[1];
      if (k !== key) {
        new_hash += pair + ",";
      }
    }
    if (value !== '') {
      new_hash += key + "=" + value + ",";
    }
    return window.location.hash = "" + new_hash;
  };

  filter = function() {
    var h;
    h = get_hash_key('filter');
    if (h === '') {
      return $('.weblog-brief').css('display', 'block');
    } else {
      $(".weblog-brief:not(.lang-" + h + ")").css('display', 'none');
      return $(".weblog-brief.lang-" + h).css('display', 'block');
    }
  };

  sort = function() {
    var h, sorted;
    h = get_hash_key('sort');
    if (h === '') {
      return;
    }
    sorted = $('.weblog-brief').remove().toArray();
    sorted.sort(function(a, b) {
      return $(a).attr("data-" + h).localeCompare($(b).attr("data-" + h));
    });
    if (h === 'updated') {
      sorted.reverse();
    }
    return $('.weblog-overview').append(sorted);
  };

  $(document).ready(function() {
    $('.weblog-article img').picture_zoomer();
    if (!$('.code-projects').length) {
      return;
    }
    filter();
    sort();
    $('#code-filter').on('change', function() {
      return set_hash_key('filter', $(this).find(':selected').attr('value'));
    });
    $('#code-sort').on('change', function() {
      return set_hash_key('sort', $(this).find(':selected').attr('value'));
    });
    $("#code-filter option[value=\"" + (get_hash_key('filter')) + "\"]").attr('selected', 'selected');
    return $("#code-sort option[value=\"" + (get_hash_key('sort')) + "\"]").attr('selected', 'selected');
  });

  $(window).on('hashchange', function() {
    filter();
    return sort();
  });

  jQuery.fn.picture_zoomer = function(speed) {
    if (speed == null) {
      speed = 400;
    }
    return $(this).on('click', function(e) {
      e.preventDefault();
      if ($(this).is('img')) {
        return zoom($(this), speed);
      } else {
        return zoom($(this).find('img'), speed);
      }
    });
  };

  get_scroll = function() {
    return document.documentElement.scrollTop || document.body.scrollTop;
  };

  zoom = function(img, speed) {
    var large, offset;
    large = $(new Image());
    large.attr('src', img.attr('data-large') || img.attr('src'));
    offset = img.offset();
    return large.on('load', function() {
      var close, height, w_height, w_width, width;
      width = large.prop('width');
      height = large.prop('height');
      w_width = $(window).width() - 25;
      w_height = $(window).height() - 25;
      if (width > w_width) {
        height = height / (width / w_width);
        width = w_width;
      }
      if (height > w_height) {
        width = width / (height / w_height);
        height = w_height;
      }
      large.css({
        width: img.width(),
        height: img.height(),
        left: offset.left,
        top: offset.top,
        position: 'absolute',
        'box-shadow': '0 0 8px rgba(0, 0, 0, .3)',
        'z-index': 5000
      });
      $(document.body).append(large);
      large.animate({
        width: width,
        height: height,
        left: ($(window).width() - width) / 2,
        top: ($(window).height() + $('#menu').height() - height) / 2 + get_scroll()
      }, {
        duration: speed
      });
      close = function() {
        return large.animate({
          width: img.width(),
          height: img.height(),
          left: offset.left,
          top: offset.top
        }, {
          duration: speed,
          complete: function() {
            return large.remove();
          }
        });
      };
      $(document.body).one('click', close);
      return $(document).on('keydown.photo_viewer', function(e) {
        if (e.keyCode !== 27) {
          return;
        }
        close();
        return $(document).off('keydown.photo_viewer');
      });
    });
  };

}).call(this);
